(ns yardstick.tags-test
  (:require [clojure.test :refer :all]
            [yardstick.tags :refer :all]
            [clojure.set :as set]))

(defn- describe-tags [expression tag-set]
  (= (parse-tag-set expression) tag-set))

(deftest test-parse-tags
  (is (describe-tags "!(TagA & TagB) | TagC"
                     [:or #{[:not [:and #{[:tag "TagA"] [:tag "TagB"]}]] [:tag "TagC"]}]))
  (is (describe-tags "!TagA" [:not [:tag "TagA"]]))
  (is (describe-tags "" [:empty]))
  (is (describe-tags "(TagA & TagB) | TagC"
                     [:or #{[:and #{[:tag "TagA"] [:tag "TagB"]}] [:tag "TagC"]}]))
  (is (describe-tags "(TagA | TagB) & TagC"
                     [:and #{[:or #{[:tag "TagA"] [:tag "TagB"]}] [:tag "TagC"]}]))
  (is (describe-tags "TagA & !TagB" [:and #{[:not [:tag "TagB"]] [:tag "TagA"]}]))
  (is (describe-tags "TagA & TagB" [:and #{[:tag "TagA"] [:tag "TagB"]}]))
  (is (describe-tags "TagA | TagB" [:or #{[:tag "TagA"] [:tag "TagB"]}])))

(defn test-single-validator [[expression tag-set] expected]
  (= ((make-tag-validator (parse-tag-set expression)) tag-set) expected))

(deftest test-parse-tag-validator
  (is (test-single-validator ["" #{"TagA" "TagB" "TagC"}] true))
  (is (test-single-validator ["" #{"TagA" "TagB"}] true))
  (is (test-single-validator ["" #{"TagA" "TagC"}] true))
  (is (test-single-validator ["" #{"TagA"}] true))
  (is (test-single-validator ["" #{"TagB" "TagC"}] true))
  (is (test-single-validator ["" #{"TagB"}] true))
  (is (test-single-validator ["" #{"TagC"}] true))
  (is (test-single-validator ["" #{}] true))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagC"}] true))
  (is (test-single-validator ["TagA & !TagB" #{"TagA" "TagC"}] true))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagA" "TagC"}] true))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagB"}] false))
  (is (test-single-validator ["TagA & !TagB" #{"TagB"}] false))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagB" "TagA" "TagC"}] true))
  (is (test-single-validator ["TagA & !TagB" #{}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagB" "TagA" "TagC"}] true))
  (is (test-single-validator ["TagA & TagB" #{"TagA"}] false))
  (is (test-single-validator ["TagA & TagB" #{"TagB" "TagA"}] true))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagA" "TagC"}] true))
  (is (test-single-validator ["TagA & TagB" #{"TagB"}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagB" "TagC"}] true))
  (is (test-single-validator ["TagA & TagB" #{"TagA" "TagC"}] false))
  (is (test-single-validator ["!TagA" #{"TagB" "TagC"}] true))
  (is (test-single-validator ["TagA | TagB" #{"TagB" "TagA" "TagC"}] true))
  (is (test-single-validator ["TagA & TagB" #{"TagB" "TagC"}] false))
  (is (test-single-validator ["TagA & !TagB" #{"TagB" "TagA"}] false))
  (is (test-single-validator ["TagA & !TagB" #{"TagB" "TagA" "TagC"}] false))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagB" "TagA" "TagC"}] true))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagB" "TagA"}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagB"}] false))
  (is (test-single-validator ["!TagA" #{"TagB"}] true))
  (is (test-single-validator ["!TagA" #{}] true))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagA"}] false))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagB" "TagC"}] true))
  (is (test-single-validator ["!TagA" #{"TagC"}] true))
  (is (test-single-validator ["!TagA" #{"TagB" "TagA" "TagC"}] false))
  (is (test-single-validator ["TagA & !TagB" #{"TagC"}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagC"}] false))
  (is (test-single-validator ["TagA & !TagB" #{"TagA"}] true))
  (is (test-single-validator ["TagA | TagB" #{"TagA"}] true))
  (is (test-single-validator ["!TagA" #{"TagA"}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagA"}] false))
  (is (test-single-validator ["TagA | TagB" #{"TagB" "TagC"}] true))
  (is (test-single-validator ["TagA | TagB" #{"TagB" "TagA"}] true))
  (is (test-single-validator ["TagA | TagB" #{"TagA" "TagC"}] true))
  (is (test-single-validator [ "!TagA" #{"TagB" "TagA"}] false))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{}] false))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{}] true))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagB" "TagA"}] true))
  (is (test-single-validator ["TagA | TagB" #{"TagB"}] true))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagB"}] true))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagC"}] true))
  (is (test-single-validator ["TagA | TagB" #{"TagC"}] false))
  (is (test-single-validator ["TagA & TagB" #{"TagC"}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagB" "TagA"}] false))
  (is (test-single-validator ["TagA & TagB" #{"TagB" "TagA" "TagC"}] true))
  (is (test-single-validator ["!TagA" #{"TagA" "TagC"}] false))
  (is (test-single-validator ["TagA & !TagB" #{"TagB" "TagC"}] false))
  (is (test-single-validator ["TagA | TagB" #{}] false))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{"TagA" "TagC"}] true))
  (is (test-single-validator ["(TagA | TagB) & TagC" #{}] false))
  (is (test-single-validator ["TagA & TagB" #{}] false))
  (is (test-single-validator ["!(TagA & TagB) | TagC" #{"TagA"}] true))
  (is (test-single-validator ["(TagA & TagB) | TagC" #{"TagB" "TagC"}] true)))
